import { makeAutoObservable } from 'mobx';
import { Shift, Location } from '../types/shift';
import { shiftService } from '../services/shift_service';
import { locationService } from '../services/location_service';

export class ShiftStore {
  shifts: Shift[] = [];
  selectedShift: Shift | null = null;
  isLoading = false;
  error: string | null = null;

  constructor() {
    makeAutoObservable(this);
  }

  async loadShifts(): Promise<void> {
    console.log('üîç loadShifts –≤—ã–∑–≤–∞–Ω');
    console.log('üîç userLocation –≤ loadShifts:', locationService.userLocation);

    if (!locationService.userLocation) {
      console.log('üîç userLocation –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –ø–æ–ª—É—á–∞–µ–º –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é...');
      await locationService.getUserLocation();
    }

    if (!locationService.userLocation) {
      console.log(
        '‚ùå userLocation –≤—Å–µ –µ—â–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ—Å–ª–µ –ø–æ–ø—ã—Ç–∫–∏ –ø–æ–ª—É—á–µ–Ω–∏—è',
      );
      this.setError('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–∞–∑—Ä–µ—à–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–º–µ–Ω');
      return;
    }

    try {
      console.log(
        '‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–º–µ–Ω—ã –¥–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç:',
        locationService.userLocation,
      );
      this.setLoading(true);
      this.clearError();
      const fetchedShifts = await shiftService.getShiftsByLocation(
        locationService.userLocation.latitude,
        locationService.userLocation.longitude,
      );
      this.setShifts(fetchedShifts);
    } catch (err) {
      this.setError(err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏');
    } finally {
      this.setLoading(false);
    }
  }

  private setShifts(shifts: Shift[]) {
    this.shifts = shifts;
  }

  private setLoading(loading: boolean) {
    this.isLoading = loading;
  }

  private setError(error: string | null) {
    this.error = error;
  }

  private clearError() {
    this.error = null;
  }
}
